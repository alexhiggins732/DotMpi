# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: PRE-RELEASE

on:
  push:
    branches: [ "develop", "release/*" ]
  pull_request:
    branches: [ "develop", "release/*" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:        
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x


    - uses: dotnet/nbgv@master
      id: nbgv
    - name: Set Package Version
      run: |
          echo "NugetPackageVersion=${{ steps.nbgv.outputs.SimpleVersion }}-alpha.${{ steps.nbgv.outputs.VersionRevision }}" >> "$GITHUB_ENV"
    - name: Diplay Package Version
      run: echo "PackageVersion=${{ env.NugetPackageVersion }}"



    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore -p:Version=${{ steps.nbgv.outputs.AssemblyFileVersion }}
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal



    - name: Create tag
      if: github.event_name == 'push'  
      run: |
          git config --global user.name "Alexander Higgins"
          git config --global user.email "alexhiggins732@github.com"
          git tag ${{ env.NugetPackageVersion }} -a -m "Release ${{ env.NugetPackageVersion }}"
    - name: Push tag
      if: github.event_name == 'push'  
      uses: ad-m/github-push-action@v0.6.0
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true


    - name: Pack
      if: github.event_name == 'push'  
      run: dotnet pack --configuration Release /p:Version=${{ env.NugetPackageVersion }}${{ steps.nbgv.outputs.BuildMetadataFragment }} --output .
    - name: Push
      if: github.event_name == 'push'  
      run: dotnet nuget push HigginsSoft.DotMpi.${{ env.NugetPackageVersion }}.nupkg --skip-duplicate --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}

